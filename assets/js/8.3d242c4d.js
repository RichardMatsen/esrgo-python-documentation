(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{232:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("Commands are simple classes which perform (or orchestrate) the functions of the application. They will typically correspond to the use-cases of the system, so they are useful as a focal point for understanding the code.")]),t._v(" "),a("p",[t._v("Bob Martin says that an application architecture should show it’s  intent, not what technology it’s built on. Commands are a good way to do that (Bob calls them Interactors).")]),t._v(" "),a("p",[t._v("As well as code clarity, we can also use them for:")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("This separation of initialization and processing gives tests the opportunity to mock out resources. Since Python is dynamic, an object can be “recomposed” by a test that creates it - that is, any property or method can be replaced for mocking or logging method invocation but this requires separation of initialization and invocation.")]),t._v(" "),a("p",[t._v("The UpdateRepository command listed below illustrates the pattern:")]),t._v(" "),t._m(5),t._m(6),t._v(" "),a("p",[t._v("Python doesn’t have dependency injection in as formal a way as C#. In C# you must program to an interface, which gives a hook for substituting mock objects in test scenarios. In Python, you can just replace components of the SUT with mocks directly, in between the SUT initialization and call to the method to be tested.")]),t._v(" "),a("p",[t._v("In both languages, the dependency must be exposed as a property of the SUT. In the code above, three sub-commands are exposed as properties purely in order to allow them to be mocked.")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),a("p",[t._v("The use of “self.” everywhere feels a little cluttered. It is necessary to designate scope, in case a similar name is declared globally - but it would be nicer if the scope within a class was automatically limited to the class properties and methods only, so that self could be dropped.")]),t._v(" "),a("MiniMap")],1)},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commands","aria-hidden":"true"}},[this._v("#")]),this._v(" Commands")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[this._v("#")]),this._v(" Overview")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("Representing use-cases, and a focus for functional / acceptance tests")])]),this._v(" "),s("li",[s("p",[this._v("Encourage DCI practices, which is about moving process code out of entity methods and into their own class (or group of classes)")])]),this._v(" "),s("li",[s("p",[this._v("Providing a DSL for a process-oriented application by allowing configuration or command line composition")])]),this._v(" "),s("li",[s("p",[this._v("Scalability, by passing command instances to back-end servers for processing")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"init-and-do-it"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#init-and-do-it","aria-hidden":"true"}},[this._v("#")]),this._v(" Init and Do_It")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("code",[this._v("__init__")]),this._v(" method of the class defines the local class properties. In a command class, we use it to initialize resources used in the process, but do not invoke any processing here. This happens in the "),s("strong",[this._v("do_it")]),this._v(" method, which is the start method, invoked externally to the command.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("UpdateRepositoryCommand")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" settings"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("application_settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" settings\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("database "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'MsSqlServer'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            db_uri "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"mssql+pyodbc://%s"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("%")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dsn_name\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" MsSqlGenericSqlRepository"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db_uri"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("database "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'RavenDb'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" RavenDbRepository"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("database "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'SqlLite'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            db_uri "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'sqlite:////'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sqlite_db_path\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" SqliteRepository"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db_uri"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("database "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'PostgreSql'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" NotImplementedError\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" TypeError"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Invalid database specified in settings'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("directory_scanner "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\n          InboundDirectoryScanner"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            directory_path"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ersgo_local_in_path"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            vpd"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vpd"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            last_sequence_number_processed"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_sequence_number_processed"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            files_to_process"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files_to_process"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("batch_handler "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\n          BatchHandler"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            batch_size"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql_loader_batch_handler_batch_size"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            on_batch_full"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commit"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file_processor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CsvFileProcessor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParserMapping"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_error "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error_originating_module "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbose "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbose\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process_run_audit "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ProcessRunAudit"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audit_path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),a("span",{attrs:{class:"token comment"}},[t._v("# Hooks for mocking in tests")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bulk_insert_command "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ProcessStagingRecordsSqlBulkInsert\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process_sql_command "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ProcessStagingRecordsSql\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process_raven_command "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ProcessStagingRecordsRavenDb\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("do_it")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process_run_audit"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("try")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("directory_scanner"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scan"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("file")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("directory_scanner"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files_included"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{attrs:{class:"token keyword"}},[t._v("with")]),t._v(" StagingFileErrors"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token builtin"}},[t._v("file")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audit_path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n                "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_error"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process_file"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token builtin"}},[t._v("file")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_error"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error_count"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_error"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("summary"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error_originating_module "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" originating_module"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            msg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'An error occurred in command UpdateRepository ({0}):, {1}'")]),t._v("\\\n                "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error_originating_module"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("str")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            error "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnexpectedError"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("finally")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_write_audit"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"mocking-dependencies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mocking-dependencies","aria-hidden":"true"}},[this._v("#")]),this._v(" Mocking Dependencies")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"comments-on-language-and-syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comments-on-language-and-syntax","aria-hidden":"true"}},[this._v("#")]),this._v(" Comments on language and syntax")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The first thing that a static language programmer notices is the lack of formal property definitions. You need to scan the "),s("code",[this._v("__init__")]),this._v(" method to work out what properties the class has (those initialized with the self prefix), and this a convention only - properties can be initialized elsewhere in the class methods, although this is flagged by PyCharm.")])}],!1,null,null,null);e.options.__file="commands.md";s.default=e.exports}}]);