(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{209:function(t,s,a){t.exports=a.p+"assets/img/csv-parsing.adac2a80.png"},223:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("This module deals with converting CSV data into model objects, prior to storing in the local data store.")]),t._v(" "),n("figure",[n("img",{directives:[{name:"img",rawName:"v-img"}],attrs:{src:a(209),alt:"csv-parsing"}}),t._v(" "),t._m(2)]),t._v(" "),n("br"),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),n("p",[t._v("The CSV File Processor takes the name of a file to process and returns a stream of StagingRecords, which are containers for one or more domain entity records which have been parsed from a CSV line.")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._v(" "),n("p",[t._v("The CSV files are non-homogenous, containing mixed record types,  so a CSV line has a record type code as the first entry, which is used to look up the appropriate parser from the ParserMapper. The parser is injected into the CSV_Line_Processor to supply specific formats (Strategy pattern).")]),t._v(" "),t._m(9),t._v(" "),n("p",[t._v("The csv line can represent one of two types of ‘instruction’:")]),t._v(" "),t._m(10),t._v(" "),n("p",[t._v("A delete record is an instance of the entity with only the Id attribute filled in.")]),t._v(" "),t._m(11),n("p",[t._v("The method make_append_instance makes use of the injected Parser.")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),n("p",[t._v("The column processor converts the column data and traps errors if there is invalid data for the conversion or if the resulting value is outside minimum and maximum range.")]),t._v(" "),t._m(15),t._v(" "),t._m(16),n("p",[t._v("Conversion functions are supplied by the Parser, so the details of how to convert are external to this context, and are specific to the data format that the Parser represents.")]),t._v(" "),n("p",[t._v("For example, the NHS dates are supplied in the format ‘YYYYMMDD’ whereas the Australian form is full ISO - ‘YYYY-MM-DD HH:MM:SS’. Internally, nearly all Model object dates are handled without the time portion, so the latter converter has to truncate before converting.")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),n("p",[t._v("This is a fairly simple lookup table between the record type code form the CSV data line and an instance of a CSV Parser class. Note that the parsers are instantiated once per process run and re-used for each line of the type.")]),t._v(" "),t._m(20),t._v(" "),n("p",[t._v("Some lines in the file, such as Header and Trailer, are not processed so these are mapped to None. The Absence and Training records aren’t used, so they are also mapped to None. This causes the line to be skipped in the line processor.")]),t._v(" "),t._m(21),t._v(" "),n("p",[t._v("If we get a line with an unspecified record type an error is raised, so in this way we can distinguish between uninteresting and invalid records.")]),t._v(" "),t._m(22),t._v(" "),n("p",[t._v("As mentioned above, each type can have an ‘Append’ or ‘Delete’ instruction, which is indicated by the third character of the code. The same parser is used for both instruction types, so only the first two characters are matched for records of interest.")]),t._v(" "),t._m(23),t._m(24),t._v(" "),n("p",[t._v("The parser classes (generated from the XML domain object definitions) are largely declarative in style, with a few simple methods that hook into the Context processors as described above.")]),t._v(" "),t._m(25),t._v(" "),t._m(26),t._m(27),t._v(" "),n("p",[t._v("The ParserBase class contains some plumbing for the parsers, which keeps the derived classes fairly lean. Two methods are provided for programmatically altering the column definition Descriptors, for use in unit tests.")]),t._v(" "),t._m(28),t._m(29),t._v(" "),n("p",[t._v("During entity creation the DescriptorOwner metaclass:")]),t._v(" "),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),n("p",[t._v("There are seven Descriptors which define the column types required to parse the CSV data.")]),t._v(" "),t._m(33),n("p",[t._v("Note that the EndDateDescriptor inherits from DateDescriptor and just changes the default value.")]),t._v(" "),t._m(34),t._v(" "),n("p",[t._v("Note that there is no code in the setter or getter. The setting of instance attribute values is done by the set() method of the Parser. If done through the Descriptor setter, the value would end up on the Parser not the target instance. Likewise with the getter below, although there’s not really a need to read out the data - it’s all about setting data.")]),t._v(" "),t._m(35),n("MiniMap")],1)},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"csv-processing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csv-processing","aria-hidden":"true"}},[this._v("#")]),this._v(" CSV Processing")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[this._v("#")]),this._v(" Overview")])},function(){var t=this.$createElement,s=this._self._c||t;return s("figcaption",[s("i",[this._v("(click to enlarge)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"components"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#components","aria-hidden":"true"}},[this._v("#")]),this._v(" Components")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"csv-file-processor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csv-file-processor","aria-hidden":"true"}},[this._v("#")]),this._v(" CSV File Processor")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("code",[this._v("process()")]),this._v(" method contains a yield statement, and therefore returns a generator function. This minimizes the memory footprint and is able to handle arbitrarily large files.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" csv\n"),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" CsvProcessing"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csv_line_processor "),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" CsvLineProcessor\n"),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" CsvProcessing"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csv_processing_exceptions "),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" UnknownRecordTypeError\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("CsvFileProcessor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metadata_mapping"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("metadata_mapping "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" metadata_mapping\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# Make it a property for external reporting of line count")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_processor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CsvLineProcessor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metadata_mapping"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("_get_dict_reader")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        _dialect "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" csv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dialect\n        _dialect"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delimiter "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"~"')]),t._v("\n        _dialect"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("quoting "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" csv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QUOTE_NONE\n        _dialect"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lineterminator "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'\\r\\n'")]),t._v("\n        dict_reader "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" csv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DictReader"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fieldnames"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"RecordType"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" restkey"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"Record"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" restval"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dialect"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("_dialect"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dict_reader\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("process")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("try")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("open")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newline"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v("''")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" f"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" dict_entry "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_get_dict_reader"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number "),a("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n                    "),a("span",{attrs:{class:"token keyword"}},[t._v("try")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                        staging_record "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_processor"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process_line"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict_entry"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" staging_record "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                            "),a("span",{attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" staging_record\n                    "),a("span",{attrs:{class:"token keyword"}},[t._v("except")]),t._v(" UnknownRecordTypeError "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# If unknown line, record error and move on")]),t._v("\n                        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" e\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"csv-line-processor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csv-line-processor","aria-hidden":"true"}},[this._v("#")]),this._v(" CSV Line Processor")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"record-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#record-type","aria-hidden":"true"}},[this._v("#")]),this._v(" Record Type")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"instruction-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instruction-type","aria-hidden":"true"}},[this._v("#")]),this._v(" Instruction Type")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("‘Append’ indicates an inserted or updated record")])]),this._v(" "),s("li",[s("p",[this._v("‘Delete’ indicates that a record has been deleted")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("CsvLineProcessor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parser_map"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" show_warnings"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token boolean"}},[t._v("False")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser_map "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" parser_map\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show_warnings "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" show_warnings\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("record_type_code "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instruction_type "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" InstructionType"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Undefined\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_record "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n"),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" Other code shown below"),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("make_staging_record")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_record "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StagingRecord"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_record"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instruction_type "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instruction_type\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instruction_type "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" InstructionType"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Append"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_make_append_instance"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instruction_type "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" InstructionType"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delete"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_make_delete_token"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" InvalidStagingInstructionType\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("has_fatal_error"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_record"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extend"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instances"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_record"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extend"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("process_line")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" csv_dict_entry"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line_number"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" line_number\n    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("record_type_code "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" csv_dict_entry"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"RecordType"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" csv_dict_entry"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"Record"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("try")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser_map\n                          "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_parser_from_record_type"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("record_type_code"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("make_staging_record"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staging_record\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("except")]),t._v(" UnknownRecordTypeError "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        msg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Unknown record at line {0}, record type code {1}"')]),t._v("\n              "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("record_type_code"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        e"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg\n        e"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" e\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("It takes the csv column specification from the Parser, so it does not have to know the specifics of the data format.")])]),this._v(" "),s("li",[s("p",[this._v("It calls on the Parser to make Model object instances, and it never sees those instances. This is useful, for example, because the Australian Health CSV data contains two model types per line, whereas the NHS data contains one per line. The parser specific to the data is injected into these context objects (via the ParserMap).")])]),this._v(" "),s("li",[s("p",[this._v("Per column, the value returned from the CSV_Column_Processor is passed into the Parser for setting on the instance record. This gives flexibility for the Australian use case, as the single PersonId column must be applied to both model instances.")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("_make_append_instance")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_check_line_format"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("has_fatal_error"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("make_instance"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    csv_column_processor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CsvColumnProcessor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show_warnings"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    column_number "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n    attributes_and_data "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" zip_longest"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sorted_for_csv"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value_raw "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" attributes_and_data"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        column_number "),a("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n        value "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" csv_column_processor"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("column_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value_raw"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("set")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attribute_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extend"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("csv_column_processor"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"csv-column-processor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csv-column-processor","aria-hidden":"true"}},[this._v("#")]),this._v(" CSV Column Processor")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"conversion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conversion","aria-hidden":"true"}},[this._v("#")]),this._v(" Conversion")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("_convert_value")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value_raw"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("# Set default value for nulls")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value_raw "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("or")]),t._v(" value_raw "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show_warnings"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            msg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('\'Warning: converting null value "{}" to default "{}"\'')]),t._v("\n                  "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value_raw"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            warning "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" NullDefaultWarning"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" attributes "),a("span",{attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conversion"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value_raw\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("try")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        value "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conversion"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value_raw"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        error "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversionException"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("str")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        error"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fix "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataFix"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value_raw"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        value "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"range-checks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#range-checks","aria-hidden":"true"}},[this._v("#")]),this._v(" Range Checks")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("_check_range_minimum")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attributes "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("or")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_minimum "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("or")]),t._v(" value "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" value "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_minimum"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        msg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Value {0} is below range minimum of {1}'")]),t._v("\n              "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_minimum"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        error "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" RangeException"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        error"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fix "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataFix"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("_check_range_maximum")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attributes "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("or")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_maximum "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("or")]),t._v(" value "),a("span",{attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" value "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_maximum"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        msg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Value {0} is above range maximum of {1}'")]),t._v("\n              "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_maximum"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        error "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" RangeException"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        error"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fix "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataFix"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" attributes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"csv-parser-mapper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csv-parser-mapper","aria-hidden":"true"}},[this._v("#")]),this._v(" CSV Parser Mapper")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"uninteresting-lines"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uninteresting-lines","aria-hidden":"true"}},[this._v("#")]),this._v(" Uninteresting Lines")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"unknown-lines"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unknown-lines","aria-hidden":"true"}},[this._v("#")]),this._v(" Unknown Lines")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"instruction-type-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instruction-type-2","aria-hidden":"true"}},[this._v("#")]),this._v(" Instruction Type")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("ParserMapping")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser_mapping "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" \\\n            "),a("span",{attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HDR"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# File header")]),t._v("\n                 AD"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("address_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AddressParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 AS"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("assignment_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AssignmentParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 CO"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("assignment_costing_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AssignmentCostingParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 CM"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("competence_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CompetenceParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 CR"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("contact_relationship_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ContactRelationshipParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 ET"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("extended_information_type_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ExtendedInformationTypeParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 LC"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("location_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocationParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 OR"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("organisation_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrganisationParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 PR"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("person_detail_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PersonDetailParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 PH"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("phone_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PhoneParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 PO"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("position_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PositionParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 QL"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("qualification_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QualificationParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 ST"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("special_information_type_parser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SpecialInformationTypeParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 TR"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# training records not used")]),t._v("\n                 AB"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# absence records not used")]),t._v("\n                 TRL"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# File trailer )")]),t._v("\n\n     "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("get_parser_from_record_type")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" record_type"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("try")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser_mapping"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("record_type"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# Try the full record_type")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("except")]),t._v(" KeyError"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" record_type"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'A'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'D'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# A = Append, D = Delete")]),t._v("\n                "),a("span",{attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" UnknownRecordTypeError"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record_type"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("try")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                parser "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser_mapping"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("record_type"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" parser\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("except")]),t._v(" KeyError"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" UnknownRecordTypeError"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record_type"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"parser-classes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parser-classes","aria-hidden":"true"}},[this._v("#")]),this._v(" Parser Classes")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("The CSV columns are class attributes set by Descriptors which define the column types.")])]),this._v(" "),s("li",[s("p",[this._v("The make_instance method creates a new instance of the target Model object (or objects in the case of the Australian specification).")])]),this._v(" "),s("li",[s("p",[this._v("The set method applies processed data values, and can be applied to multiple targets if required.")])]),this._v(" "),s("li",[s("p",[this._v("The instances property returns completed objects when called.")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("AddressParser")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParserBase"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metaclass"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("DescriptorOwner"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    address "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    PersonId "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" IntDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Id "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" IntDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    AddressType "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StringDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    AddressStyle "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StringDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    PrimaryFlag "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" BoolDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    AddressFirstLine "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StringDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    AddressSecondLine "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StringDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    AddressThirdLine "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StringDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("7")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    AddressTown "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StringDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    AddressCounty "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StringDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("9")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    AddressPostcode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StringDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    AddressCountry "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StringDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("11")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    EffectiveDate "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" StartDateDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("12")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    EffectiveEndDate "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" EndDateDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("13")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    LastUpdateDate "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" DateTimeDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("14")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("make_instance")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line_number"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TransportLineNo "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" line_number\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("set")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attribute_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token builtin"}},[t._v("setattr")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attribute_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    @"),a("span",{attrs:{class:"token builtin"}},[t._v("property")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("instances")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"parser-base"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parser-base","aria-hidden":"true"}},[this._v("#")]),this._v(" Parser Base")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("ParserBase")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metaclass"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("ABCMeta"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    descriptor_list "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    descriptors "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("descriptors "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class__"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("descriptor_list"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class__"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_count "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("len")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("descriptors"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("optional_ragged_right_columns "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    @abstractmethod\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("make_instance")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line_number"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n    @abstractmethod\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("set")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attribute_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n    @abstractproperty\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("instances")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n    @"),a("span",{attrs:{class:"token builtin"}},[t._v("property")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("sorted_for_csv")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("sorted")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("descriptors"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" x"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    @"),a("span",{attrs:{class:"token builtin"}},[t._v("property")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("attribute_names")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attribute_name "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sorted_for_csv"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    @"),a("span",{attrs:{class:"token builtin"}},[t._v("property")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("mandatory_column_count")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_count "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("optional_ragged_right_columns\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for programmatic access to column definitions in tests")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("get_metadata")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attribute_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        descriptor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("descriptors \n                      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" a"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attribute_name "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" attribute_name"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" descriptor "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" descriptor "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("set_metadata")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attribute_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        descriptor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("d "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" d "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("descriptors \n                      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" d"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attribute_name "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" attribute_name"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" descriptor "),a("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("hasattr")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("descriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{attrs:{class:"token builtin"}},[t._v("setattr")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("descriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"the-descriptorowner-metaclass"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-descriptorowner-metaclass","aria-hidden":"true"}},[this._v("#")]),this._v(" The DescriptorOwner Metaclass")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("records the name of the attribute within the descriptor so that we can use setattr()")])]),this._v(" "),s("li",[s("p",[this._v("records attribute names in a list for merging with CSV data to create the object dictionary")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("DescriptorOwner")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ABCMeta"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("type")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__new__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bases"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attrs"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("# find all descriptors, auto-set their labels")]),t._v("\n        cls_instance "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DescriptorOwner"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cls"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__new__"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bases"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attrs"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        descriptors "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" attrs"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("isinstance")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CsvDescriptorBase"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                v"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attribute_name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" n\n                "),a("span",{attrs:{class:"token comment"}},[t._v("# record the descriptor")]),t._v("\n                descriptors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        cls_instance"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("descriptor_list"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" descriptors\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cls_instance\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"descriptors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#descriptors","aria-hidden":"true"}},[this._v("#")]),this._v(" Descriptors")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Utility"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("date_constants "),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" bot"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eot"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bot_datetime\n"),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" CsvProcessing"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NhsStagingRecords"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conversions "),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" to_int"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to_decimal"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to_bool"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to_date"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to_datetime\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("IntDescriptor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CsvDescriptorBase"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token builtin"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_order "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" col_order\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conversion "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" to_int\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_min "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("DecimalDescriptor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CsvDescriptorBase"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token builtin"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_order "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" col_order\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Decimal"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0.0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conversion "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" to_decimal\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_min "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Decimal"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0.0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("StringDescriptor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CsvDescriptorBase"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token builtin"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_order "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" col_order\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("BoolDescriptor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CsvDescriptorBase"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token builtin"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_order "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" col_order\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conversion "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" to_bool\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("DateDescriptor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CsvDescriptorBase"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token builtin"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_order "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" col_order\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" bot\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conversion "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" to_date\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_minimum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" bot\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_maximum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" eot\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("EndDateDescriptor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DateDescriptor"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token builtin"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("col_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" eot\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("DateTimeDescriptor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CsvDescriptorBase"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token builtin"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_order "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" col_order\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" bot_datetime\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conversion "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" to_datetime\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_minimum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" bot_datetime\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("strong",[this._v("CsvDescriptorBase")]),this._v(" class provides default values for the attributes which are overridden in the subclasses above as appropriate.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("CsvDescriptorBase")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metaclass"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("ABCMeta"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__init__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attribute_name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_order "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conversion "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_minimum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range_maximum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__get__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" owner"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__set__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("__repr__")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"{}, order: {}, attribute: {}"')]),t._v("\n               "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token builtin"}},[t._v("type")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_order"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attribute_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);e.options.__file="csv-processing.md";s.default=e.exports}}]);